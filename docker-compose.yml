version: "3.8"
services:
  db:
    image: postgres:15.1-alpine
    container_name: db_menu_app
    restart: always
    expose:
      - "5432"
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - backend_network
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 30s
      retries: 5

  redis:
    image: redis:7.2.4
    container_name: redis_app
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - backend_network
      - db_network
    expose:
      - "6379"
    ports:
      - "6379:6379"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: menu_app_fastapi
    restart: always
    command: ["/menu_app_FastApi/docker/app.sh"]
    ports:
      - "8000:80"
    depends_on:
      - db
      - redis
    networks:
      - backend_network

networks:
  backend_network:
    name: menu_app
  db_network:
    name: db_for_menu_app

volumes:
  db_data:
    name: pg_data_menu
  redis_data:
    name: redis_data