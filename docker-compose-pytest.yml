version: "3.8"
services:
  db:
    image: postgres:15.1-alpine
    container_name: db_menu_app_test
    expose:
      - "5432"
    ports:
      - "6000:5432"
    env_file:
      - .test.env
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - backend_network_pytest
      - db_network_pytest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 30s
      retries: 5

  redis:
    image: redis:7.2.4
    container_name: redis_app
    volumes:
      - redis_data_pytest:/data
    networks:
      - backend_network_pytest
      - db_network_pytest
    expose:
      - "6379"
    ports:
      - "6379:6379"
    env_file:
      - .test.env
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .test.env
    container_name: menu_app_fastapi_test
    command: sh -c "pytest -v"
    ports:
      - "8000:80"
    depends_on:
      - db
    networks:
      - backend_network_pytest

networks:
  backend_network_pytest:
    name: backend_network_pytest
  db_network_pytest:
    name: db_network_pytest

volumes:
  db_data:
    name: pg_data_menu_pytest
  redis_data_pytest:
    name: redis_data_pytest
